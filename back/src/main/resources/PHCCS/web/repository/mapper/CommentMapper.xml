<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PHCCS.service.comment.repository.mapper.CommentMapper">

    <insert id="save" useGeneratedKeys="true">
        insert into
        <choose>
            <when test="category == 'qna_board'">
                qna_comment
            </when>
            <when test="category == 'vet_board'">
                vet_comment
            </when>
            <when test="category == 'community_board'">
                community_comment
            </when>
        </choose>
        (member_id, post_id, nick_name, comment, create_date, like_cnt)
        values (#{memberId}, #{postId}, #{comment.nickName}, #{comment.comment}, #{comment.writeTime}, 0)
    </insert>

    <select id="findAllComment" resultType="Comment">
        select id, post_id, member_id, comment, like_cnt, nick_name, create_date as writeTime
        from
        <choose>
            <when test="category == 'qna_board'">
                qna_comment
            </when>
            <when test="category == 'vet_board'">
                vet_comment
            </when>
            <when test="category == 'community_board'">
                community_comment
            </when>
        </choose>
        where post_id = #{postId}
    </select>

    <update id="updateComment">
        update
        <choose>
            <when test="dto.category eq 'qna_board'">
                qna_comment
            </when>
            <when test="dto.category eq 'vet_board'">
                vet_comment
            </when>
            <when test="dto.category eq 'community_board'">
                community_comment
            </when>
        </choose>
        set comment = #{dto.comment}
        where id = #{dto.commentId} and post_id = #{dto.postId}
    </update>

    <delete id="deleteComment">
        delete from
        <choose>
            <when test="category eq 'qna_board'">
                qna_comment
            </when>
            <when test="category eq 'vet_board'">
                vet_comment
            </when>
            <when test="category eq 'community_board'">
                community_comment
            </when>
        </choose>
        where post_id = #{postId} and id = #{commentId}
    </delete>

    <select id="showLikedComments" resultType="MyCommentDTO">
        select id, comment, post_id, like_cnt, create_date, 'qna_board' as category
        from qna_comment qc
        where qc.member_id = #{memberId}

        union all

        select id, comment, post_id, like_cnt, create_date, 'community_board' as category
        from community_comment as cc
        where cc.member_id = #{memberId}

        union all

        select id, comment, post_id, like_cnt, create_date, 'vet_board' as category
        from vet_comment as vc
        where vc.member_id = #{memberId}
    </select>

    <update id="incrementLike">
        update
        <choose>
            <when test="category eq 'qna_board'">
                qna_comment
            </when>
            <when test="category eq 'vet_board'">
                vet_comment
            </when>
            <when test="category eq 'community_board'">
                community_comment
            </when>
        </choose>
        set like_cnt = like_cnt + 1
        where post_id = #{postId} and id = #{commentId}
    </update>

    <update id="decrementLike">
        update
        <choose>
            <when test="category eq 'qna_board'">
                qna_comment
            </when>
            <when test="category eq 'vet_board'">
                vet_comment
            </when>
            <when test="category eq 'community_board'">
                community_comment
            </when>
        </choose>
        set like_cnt = like_cnt - 1
        where post_id = #{postId} and id = #{commentId}
    </update>

    <select id="isLikeMember" resultType="boolean">
        select is_like
        from
        <choose>
            <when test="category eq 'qna_board'">
                qna_comment_like
            </when>
            <when test="category eq 'vet_board'">
                vet_comment_like
            </when>
            <when test="category eq 'community_board'">
                community_comment_like
            </when>
        </choose>
        where member_id = #{memberId} and comment_id = #{commentId} and post_id = #{postId}
    </select>

    <insert id="likeMember">
        insert into
        <choose>
            <when test="category eq 'qna_board'">
                qna_comment_like
            </when>
            <when test="category eq 'vet_board'">
                vet_comment_like
            </when>
            <when test="category eq 'community_board'">
                community_comment_like
            </when>
        </choose>
        values (#{commentId}, #{memberId}, #{postId}, 1)
    </insert>

    <delete id="unLikeMember">
        delete from
        <choose>
            <when test="category eq 'qna_board'">
                qna_comment_like
            </when>
            <when test="category eq 'vet_board'">
                vet_comment_like
            </when>
            <when test="category eq 'community_board'">
                community_comment_like
            </when>
        </choose>
        where comment_id = #{commentId} and member_id = #{memberId} and post_id = #{postId}
    </delete>
</mapper>